name: Create and publish a Docker image to GitHub Container Registry for prod

on:
  push:
    branches: ['prod']

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set lowercase image name
        id: image_name
        run: |
          LOWERCASE_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME="${LOWERCASE_OWNER}/cowing-msa-front"
          echo "image_name=${IMAGE_NAME}" >> $GITHUB_OUTPUT

      - name: Generate version tag
        id: version
        run: |
          DATE_VERSION="$(date +'%Y.%m.%d')"
          SHORT_SHA="$(echo $GITHUB_SHA | cut -c1-7)"
          VERSION="${DATE_VERSION}-${SHORT_SHA}"
          
          echo "Generated version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ steps.image_name.outputs.image_name }}:${{ steps.version.outputs.version }}
            ${{ env.REGISTRY }}/${{ steps.image_name.outputs.image_name }}:latest 

      #디스코드 메시지 전송 
      - name: Send Discord message on Success
        if: success()
        run: |
          curl -H "Content-Type: application/json" \
          -X POST \
          -d '{"content":"✅ Front-Service Container 이미지 빌드/푸시 성공! 🎉"}' \
          ${{ secrets.DISCORD_FRONT_WEBHOOK_URL }}

      - name: Read error log summary
        if: failure()
        run: |
          echo "도커 이미지 빌드 또는 푸시 중 오류 발생" > short_error.log

      - name: Send Discord failure alert
        if: failure()
        run: |
          LOG=$(cat short_error.log)
          ESCAPED_LOG=$(echo "$LOG" | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')
          curl -H "Content-Type: application/json" \
          -X POST \
          -d "{\"content\":\"❌ Front-Service Container 이미지 빌드/푸시 실패\n\`\`\`\n$ESCAPED_LOG\n\`\`\`\"}" \
          ${{ secrets.DISCORD_FRONT_WEBHOOK_URL }}